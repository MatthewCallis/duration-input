// Generated by CoffeeScript 1.9.3
(function() {
  var extend,
    slice = [].slice;

  extend = function(target, source) {
    var output;
    output = Object.create(target);
    Object.keys(source).map(function(property) {
      property in output && (output[property] = source[property]);
    });
    return output;
  };

  ({
    merge_no_fn: function() {
      var input, j, k, len, obj, objects, output, v;
      input = arguments[0], objects = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      output = JSON.parse(JSON.stringify(input));
      for (j = 0, len = objects.length; j < len; j++) {
        obj = objects[j];
        for (k in obj) {
          v = obj[k];
          output[k] = v;
        }
      }
      return output;
    },
    merge_any: function() {
      var i, key, obj, result;
      result = {};
      i = 0;
      while (i < arguments.length) {
        obj = arguments[i];
        for (key in obj) {
          if (Object.prototype.toString.call(obj[key]) === '[object Object]') {
            if (typeof result[key] === 'undefined') {
              result[key] = {};
            }
            result[key] = merge_any(result[key], obj[key]);
          } else {
            result[key] = obj[key];
          }
        }
        i += 1;
      }
      return result;
    }
  });

}).call(this);
